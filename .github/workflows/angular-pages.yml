name: Deploy Angular app to GitHub Pages

# Note: This workflow deploys Angular to root.
# Use pages-deploy.yml for deploying both clients together.
# If this runs alone, it will deploy Angular to root.
# If pages-deploy.yml runs, it will include both clients.

on:
  push:
    branches: [ main ]
    paths:
      - 'angular-client/**'
      - '.github/workflows/angular-pages.yml'
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 1
          clean: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: angular-client
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Configure production environment
        working-directory: angular-client
        env:
          API_BASE_URL: ${{ vars.API_BASE_URL || secrets.API_BASE_URL || 'http://localhost:8080/api' }}
          WS_URL: ${{ vars.WS_URL || secrets.WS_URL || 'ws://localhost:8082/ws' }}
        run: |
          echo "Configuring environment with API_BASE_URL=${API_BASE_URL}"
          echo "Configuring environment with WS_URL=${WS_URL}"
          # Escape special characters for sed
          API_BASE_URL_ESC=$(echo "${API_BASE_URL}" | sed 's/[[\.*^$()+?{|]/\\&/g')
          WS_URL_ESC=$(echo "${WS_URL}" | sed 's/[[\.*^$()+?{|]/\\&/g')
          sed -i "s|{{API_BASE_URL}}|${API_BASE_URL_ESC}|g" src/environments/environment.prod.ts
          sed -i "s|{{WS_URL}}|${WS_URL_ESC}|g" src/environments/environment.prod.ts
          echo "Verifying environment file:"
          cat src/environments/environment.prod.ts
          # Verify replacement worked
          if grep -q "{{API_BASE_URL}}" src/environments/environment.prod.ts || grep -q "{{WS_URL}}" src/environments/environment.prod.ts; then
            echo "ERROR: Environment variables were not replaced!"
            exit 1
          fi

      - name: Build Angular (production)
        working-directory: angular-client
        run: npx ng build --configuration production --base-href /java-chat-chat/ --deploy-url /java-chat-chat/

      - name: Verify build output
        run: |
          echo "Checking build output..."
          ls -la angular-client/dist/angular-client/ || echo "Build directory not found!"
          echo "Checking index.html..."
          if [ -f angular-client/dist/angular-client/index.html ]; then
            echo "index.html exists"
            head -20 angular-client/dist/angular-client/index.html
          else
            echo "ERROR: index.html not found!"
            exit 1
          fi
          echo "Checking for JS files..."
          ls -la angular-client/dist/angular-client/*.js 2>/dev/null || echo "No JS files found!"

      - name: Create 404.html for GitHub Pages routing
        run: |
          # Copy index.html to 404.html for GitHub Pages SPA routing
          cp angular-client/dist/angular-client/index.html angular-client/dist/angular-client/404.html
          echo "Created 404.html for GitHub Pages SPA routing"
          # Verify 404.html exists
          if [ -f angular-client/dist/angular-client/404.html ]; then
            echo "404.html successfully created"
            head -5 angular-client/dist/angular-client/404.html
          else
            echo "ERROR: 404.html not created!"
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: angular-client/dist/angular-client

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
